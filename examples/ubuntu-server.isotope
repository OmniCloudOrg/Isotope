# Ubuntu Server Live ISO with Docker
FROM ./ubuntu-22.04.5-live-server-amd64.iso
#CHECKSUM sha256:a4acfda10b18da50e2ec50ccaf860d7f20ce1ee42895e3840b57b2b371fc734

LABEL name="ubuntu-docker-server"
LABEL version="1.0.0"
LABEL description="Ubuntu Server 22.04 with Docker pre-installed"

# STAGE init - VM configuration for puppet automation
STAGE init
VM provider=virtualbox
VM memory=4G
VM cpus=2
VM disk=20G
VM boot-wait=10s
VM timeout=30m

# STAGE os_install - Automated OS installation keypresses
STAGE os_install

## Wait for Ubuntu Server to fully boot and show the installation menu
# Use a more specific pattern to avoid matching boot log
WAIT 2m FOR "\u001b\[?25h\u001b\[?25lUbuntu Server"  # Looks for cursor movement + title, adjust as needed

# Try to access boot menu or wait for automatic boot
# If GRUB menu appears, select "Try or Install Ubuntu Server"
PRESS enter
WAIT 10s

## Wait for the installer to fully load and show language selection
# Look for a more unique phrase or full prompt
WAIT 90s FOR "Please select your language"  # Use full prompt if possible

# Language selection screen - usually defaults to English
PRESS enter
WAIT 5s

## Keyboard layout selection
# Look for a more unique phrase or full prompt
WAIT 10s FOR "Keyboard configuration"  # Use full prompt if possible
PRESS enter
WAIT 3s
# Confirm keyboard layout
PRESS enter
WAIT 5s

## Network configuration - wait for network detection
# Look for a more unique phrase or full prompt
WAIT 15s FOR "Configure the network"  # Use full prompt if possible
# Usually auto-configured, just continue
PRESS enter
WAIT 10s

## Proxy configuration - skip if no proxy
# Look for a more unique phrase or full prompt
WAIT 10s FOR "Configure proxy"  # Use full prompt if possible
PRESS enter
WAIT 5s

## Mirror configuration - use default Ubuntu mirrors
# Look for a more unique phrase or full prompt
WAIT 10s FOR "Ubuntu archive mirror"  # Use full prompt if possible
PRESS enter
WAIT 15s

## Storage configuration - wait for disk detection
# Look for a more unique phrase or full prompt
WAIT 20s FOR "Storage configuration"  # Use full prompt if possible
# Use entire disk (usually default option)
PRESS enter
WAIT 5s
# Confirm storage layout
PRESS enter
WAIT 10s

## Storage confirmation dialog
WAIT 10s FOR "Confirm destructive action"
PRESS tab
PRESS enter
WAIT 5s

## Destructive action confirmation
WAIT 5s FOR "This will destroy all data on the selected disks"
PRESS tab
PRESS enter
WAIT 10s

## Profile setup - wait for user creation screen
WAIT 15s FOR "Profile setup"
TYPE ubuntu
PRESS tab
TYPE ubuntu-server
PRESS tab  
TYPE ubuntu
PRESS tab
TYPE ubuntu
PRESS tab
TYPE ubuntu
PRESS tab
PRESS enter
WAIT 10s

## SSH setup
# Look for a more unique phrase or full prompt
WAIT 10s FOR "Install OpenSSH server"  # Use full prompt if possible
# Enable SSH server installation
PRESS space
WAIT 2s
PRESS tab
PRESS enter
WAIT 10s

## Server snaps - skip additional packages for now
# Look for a more unique phrase or full prompt
WAIT 10s FOR "Featured Server Snaps"  # Use full prompt if possible
PRESS tab
PRESS enter
WAIT 5s

## Wait for installation to complete - this takes a long time
# Look for a more unique phrase or full prompt
WAIT 20m FOR "Installation complete"  # Use full prompt if possible
PRESS enter
WAIT 30s

## Wait for reboot prompt
# Look for a more unique phrase or full prompt
WAIT 2m FOR "Please remove the installation medium, then press ENTER"  # Use full prompt if possible
PRESS enter

# STAGE os_configure - Live OS configuration
STAGE os_configure

## Wait for system to reboot and show login prompt
# After reboot, Ubuntu takes time to start all services
# Look for a more unique phrase or full prompt
WAIT 3m FOR "ubuntu login:"  # Use full prompt if possible

# Login with the ubuntu user we created
TYPE ubuntu
PRESS enter
WAIT 2s
TYPE ubuntu
PRESS enter
WAIT 5s

# Wait for shell prompt to be ready
WAIT 10s

# Update system packages
RUN sudo apt-get update
RUN sudo apt-get upgrade -y

# Install Docker
RUN sudo apt-get install -y docker.io
RUN sudo systemctl enable docker
RUN sudo systemctl start docker
RUN sudo usermod -aG docker ubuntu

# Install additional tools
RUN sudo apt-get install -y curl wget git vim htop neofetch

# Copy custom configuration files
COPY ./configs/docker-daemon.json /etc/docker/daemon.json
COPY ./scripts/startup.sh /usr/local/bin/startup.sh

# Make startup script executable and enable
RUN sudo chmod +x /usr/local/bin/startup.sh
RUN sudo ln -s /usr/local/bin/startup.sh /etc/rc.local

# Configure system settings
RUN echo "export EDITOR=vim" | sudo tee -a /etc/profile
RUN echo "alias ll='ls -la'" | sudo tee -a /etc/bash.bashrc

# Configure Docker daemon
RUN sudo systemctl restart docker
RUN sudo systemctl status docker

# STAGE pack - Create final bootable ISO
STAGE pack
EXPORT ./output/ubuntu-docker-server.iso
FORMAT iso9660
BOOTABLE true
VOLUME_LABEL "Ubuntu Docker Server"